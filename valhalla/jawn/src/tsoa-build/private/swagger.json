{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PromptsResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_defined_id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"pretty_name": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"user_defined_id",
					"description",
					"pretty_name",
					"created_at",
					"major_version"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptsResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptsResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultError_string_": {
				"properties": {
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"error": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptsResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptsResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"Partial_TextOperators_": {
				"properties": {
					"not-equals": {
						"type": "string"
					},
					"equals": {
						"type": "string"
					},
					"like": {
						"type": "string"
					},
					"ilike": {
						"type": "string"
					},
					"contains": {
						"type": "string"
					},
					"not-contains": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_PromptToOperators_": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"user_defined_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.prompt_v2_": {
				"properties": {
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_PromptToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_prompt_v2_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.prompt_v2_"
			},
			"PromptsFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_prompt_v2_"
					},
					{
						"$ref": "#/components/schemas/PromptsFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"PromptsFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"PromptsQueryParams": {
				"properties": {
					"filter": {
						"$ref": "#/components/schemas/PromptsFilterNode"
					}
				},
				"required": [
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user_defined_id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"pretty_name": {
						"type": "string"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"latest_version_id": {
						"type": "string"
					},
					"latest_model_used": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"last_used": {
						"type": "string"
					},
					"versions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"user_defined_id",
					"description",
					"pretty_name",
					"major_version",
					"latest_version_id",
					"latest_model_used",
					"created_at",
					"last_used",
					"versions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptResult_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptResult"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptResult.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptResult_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptQueryParams": {
				"properties": {
					"timeFilter": {
						"properties": {
							"end": {
								"type": "string"
							},
							"start": {
								"type": "string"
							}
						},
						"required": [
							"end",
							"start"
						],
						"type": "object"
					}
				},
				"required": [
					"timeFilter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PromptVersionResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"minor_version": {
						"type": "number",
						"format": "double"
					},
					"major_version": {
						"type": "number",
						"format": "double"
					},
					"helicone_template": {
						"type": "string"
					},
					"prompt_v2": {
						"type": "string"
					},
					"model": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"minor_version",
					"major_version",
					"helicone_template",
					"prompt_v2",
					"model"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptVersionResult_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PromptVersionResult"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResult.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResult_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"PromptCreateSubversionParams": {
				"properties": {
					"newHeliconeTemplate": {}
				},
				"required": [
					"newHeliconeTemplate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.string_": {
				"properties": {},
				"additionalProperties": {
					"type": "string"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"PromptInputRecord": {
				"properties": {
					"id": {
						"type": "string"
					},
					"inputs": {
						"$ref": "#/components/schemas/Record_string.string_"
					},
					"source_request": {
						"type": "string"
					},
					"prompt_version": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"response_body": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"inputs",
					"source_request",
					"prompt_version",
					"created_at",
					"response_body"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_PromptInputRecord-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptInputRecord"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptInputRecord-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptInputRecord-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess_PromptVersionResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PromptVersionResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_PromptVersionResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_PromptVersionResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"HeliconeMeta": {
				"properties": {
					"posthogHost": {
						"type": "string"
					},
					"posthogApiKey": {
						"type": "string"
					},
					"webhookEnabled": {
						"type": "boolean"
					},
					"omitResponseLog": {
						"type": "boolean"
					},
					"omitRequestLog": {
						"type": "boolean"
					},
					"modelOverride": {
						"type": "string"
					}
				},
				"required": [
					"webhookEnabled",
					"omitResponseLog",
					"omitRequestLog"
				],
				"type": "object"
			},
			"Provider": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "string",
						"enum": [
							"OPENAI",
							"ANTHROPIC",
							"CUSTOM"
						]
					}
				]
			},
			"TemplateWithInputs": {
				"properties": {
					"template": {
						"additionalProperties": false,
						"type": "object"
					},
					"inputs": {
						"properties": {},
						"additionalProperties": {
							"type": "string"
						},
						"type": "object"
					}
				},
				"required": [
					"template",
					"inputs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log": {
				"properties": {
					"response": {
						"properties": {
							"delayMs": {
								"type": "number",
								"format": "double"
							},
							"responseCreatedAt": {
								"type": "string",
								"format": "date-time"
							},
							"timeToFirstToken": {
								"type": "number",
								"format": "double"
							},
							"bodySize": {
								"type": "number",
								"format": "double"
							},
							"status": {
								"type": "number",
								"format": "double"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"delayMs",
							"responseCreatedAt",
							"bodySize",
							"status",
							"id"
						],
						"type": "object"
					},
					"request": {
						"properties": {
							"heliconeTemplate": {
								"$ref": "#/components/schemas/TemplateWithInputs"
							},
							"isStream": {
								"type": "boolean"
							},
							"requestCreatedAt": {
								"type": "string",
								"format": "date-time"
							},
							"countryCode": {
								"type": "string"
							},
							"threat": {
								"type": "boolean"
							},
							"path": {
								"type": "string"
							},
							"bodySize": {
								"type": "number",
								"format": "double"
							},
							"provider": {
								"$ref": "#/components/schemas/Provider"
							},
							"targetUrl": {
								"type": "string"
							},
							"heliconeProxyKeyId": {
								"type": "string"
							},
							"heliconeApiKeyId": {
								"type": "number",
								"format": "double"
							},
							"properties": {
								"$ref": "#/components/schemas/Record_string.string_"
							},
							"promptId": {
								"type": "string"
							},
							"userId": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"isStream",
							"requestCreatedAt",
							"path",
							"bodySize",
							"provider",
							"targetUrl",
							"properties",
							"userId",
							"id"
						],
						"type": "object"
					}
				},
				"required": [
					"response",
					"request"
				],
				"type": "object"
			},
			"Message": {
				"properties": {
					"log": {
						"$ref": "#/components/schemas/Log"
					},
					"heliconeMeta": {
						"$ref": "#/components/schemas/HeliconeMeta"
					},
					"authorization": {
						"type": "string"
					}
				},
				"required": [
					"log",
					"heliconeMeta",
					"authorization"
				],
				"type": "object"
			},
			"KeyPermissions": {
				"type": "string",
				"enum": [
					"w",
					"rw"
				]
			},
			"GenerateHashQueryParams": {
				"properties": {
					"apiKey": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"keyName": {
						"type": "string"
					},
					"permissions": {
						"$ref": "#/components/schemas/KeyPermissions"
					}
				},
				"required": [
					"apiKey",
					"userId",
					"keyName",
					"permissions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FineTuneResult": {
				"anyOf": [
					{
						"properties": {
							"error": {
								"type": "string"
							}
						},
						"required": [
							"error"
						],
						"type": "object"
					},
					{
						"properties": {
							"data": {
								"properties": {
									"url": {
										"type": "string"
									},
									"fineTuneJob": {
										"type": "string"
									}
								},
								"required": [
									"url",
									"fineTuneJob"
								],
								"type": "object"
							},
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"data",
							"success"
						],
						"type": "object"
					}
				]
			},
			"FineTuneBodyParams": {
				"properties": {
					"providerKeyId": {
						"type": "string"
					}
				},
				"required": [
					"providerKeyId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess__datasetId-string__": {
				"properties": {
					"data": {
						"properties": {
							"datasetId": {
								"type": "string"
							}
						},
						"required": [
							"datasetId"
						],
						"type": "object"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result__datasetId-string_.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess__datasetId-string__"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"DatasetMetadata": {
				"properties": {
					"promptId": {
						"type": "string"
					},
					"inputRecordsIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"NewDatasetParams": {
				"properties": {
					"datasetName": {
						"type": "string"
					},
					"requestIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"meta": {
						"$ref": "#/components/schemas/DatasetMetadata"
					}
				},
				"required": [
					"datasetName",
					"requestIds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_TimestampOperators_": {
				"properties": {
					"gte": {
						"type": "string"
					},
					"lte": {
						"type": "string"
					},
					"lt": {
						"type": "string"
					},
					"gt": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_RequestTableToOperators_": {
				"properties": {
					"prompt": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"created_at": {
						"$ref": "#/components/schemas/Partial_TimestampOperators_"
					},
					"user_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"auth_hash": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"org_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"node_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"model": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"modelOverride": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"path": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_NumberOperators_": {
				"properties": {
					"not-equals": {
						"type": "number",
						"format": "double"
					},
					"equals": {
						"type": "number",
						"format": "double"
					},
					"gte": {
						"type": "number",
						"format": "double"
					},
					"lte": {
						"type": "number",
						"format": "double"
					},
					"lt": {
						"type": "number",
						"format": "double"
					},
					"gt": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_PromptVersionsToOperators_": {
				"properties": {
					"minor_version": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"major_version": {
						"$ref": "#/components/schemas/Partial_NumberOperators_"
					},
					"id": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					},
					"prompt_v2": {
						"$ref": "#/components/schemas/Partial_TextOperators_"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_FilterLeaf.request-or-prompts_versions_": {
				"properties": {
					"request": {
						"$ref": "#/components/schemas/Partial_RequestTableToOperators_"
					},
					"prompts_versions": {
						"$ref": "#/components/schemas/Partial_PromptVersionsToOperators_"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"FilterLeafSubset_request-or-prompts_versions_": {
				"$ref": "#/components/schemas/Pick_FilterLeaf.request-or-prompts_versions_"
			},
			"DatasetFilterNode": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/FilterLeafSubset_request-or-prompts_versions_"
					},
					{
						"$ref": "#/components/schemas/DatasetFilterBranch"
					},
					{
						"type": "string",
						"enum": [
							"all"
						]
					}
				]
			},
			"DatasetFilterBranch": {
				"properties": {
					"right": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					},
					"operator": {
						"type": "string",
						"enum": [
							"or",
							"and"
						]
					},
					"left": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					}
				},
				"required": [
					"right",
					"operator",
					"left"
				],
				"type": "object"
			},
			"RandomDatasetParams": {
				"properties": {
					"datasetName": {
						"type": "string"
					},
					"filter": {
						"$ref": "#/components/schemas/DatasetFilterNode"
					},
					"offset": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"datasetName",
					"filter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DatasetResult": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"meta": {
						"$ref": "#/components/schemas/DatasetMetadata"
					}
				},
				"required": [
					"id",
					"name",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_DatasetResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/DatasetResult"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_DatasetResult-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_DatasetResult-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"ResultSuccess___-Array_": {
				"properties": {
					"data": {
						"items": {
							"properties": {},
							"type": "object"
						},
						"type": "array"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result___-Array.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess___-Array_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"NewFineTuneJob": {
				"properties": {
					"fineTuneJobId": {
						"type": "string"
					}
				},
				"required": [
					"fineTuneJobId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_NewFineTuneJob_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/NewFineTuneJob"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_NewFineTuneJob.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_NewFineTuneJob_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"FineTuneBody": {
				"properties": {
					"providerKeyId": {
						"type": "string"
					},
					"datasetId": {
						"type": "string"
					}
				},
				"required": [
					"providerKeyId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IFineTuningJob": {
				"properties": {
					"id": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"baseModel": {
						"type": "string"
					},
					"errorMessage": {
						"type": "string"
					},
					"datasetId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"model",
					"status",
					"created_at",
					"updated_at",
					"baseModel",
					"errorMessage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.any_": {
				"properties": {},
				"additionalProperties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"IFineTuningJobEvent": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"id",
					"type",
					"created_at",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FineTuneJobStats": {
				"properties": {
					"job": {
						"$ref": "#/components/schemas/IFineTuningJob"
					},
					"events": {
						"items": {
							"$ref": "#/components/schemas/IFineTuningJobEvent"
						},
						"type": "array"
					}
				},
				"required": [
					"job",
					"events"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultSuccess_FineTuneJobStats_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/FineTuneJobStats"
					},
					"error": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_FineTuneJobStats.string_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ResultSuccess_FineTuneJobStats_"
					},
					{
						"$ref": "#/components/schemas/ResultError_string_"
					}
				]
			},
			"KafkaSettings": {
				"properties": {
					"miniBatchSize": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"miniBatchSize"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AzureExperiment": {
				"properties": {
					"azureBaseUri": {
						"type": "string"
					},
					"azureApiVersion": {
						"type": "string"
					},
					"azureDeploymentName": {
						"type": "string"
					},
					"azureApiKey": {
						"type": "string"
					}
				},
				"required": [
					"azureBaseUri",
					"azureApiVersion",
					"azureDeploymentName",
					"azureApiKey"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Setting": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/KafkaSettings"
					},
					{
						"$ref": "#/components/schemas/AzureExperiment"
					}
				]
			},
			"SettingName": {
				"type": "string",
				"enum": [
					"kafka:dlq",
					"kafka:log",
					"kafka:dlq:eu",
					"kafka:log:eu",
					"kafka:orgs-to-dlq",
					"azure:experiment"
				],
				"nullable": false
			},
			"url.URL": {
				"type": "string",
				"description": "The URL interface represents an object providing static methods used for creating object URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/URL)\n`URL` class is a global reference for `require('url').URL`\nhttps://nodejs.org/api/url.html#the-whatwg-url-api"
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "helicone-api",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/v1/prompt/query": {
			"post": {
				"operationId": "GetPrompts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptsResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptsQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}/query": {
			"post": {
				"operationId": "GetPrompt",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}": {
			"delete": {
				"operationId": "DeletePrompt",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/prompt/version/{promptVersionId}/subversion": {
			"post": {
				"operationId": "CreateSubversion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PromptCreateSubversionParams"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/version/{promptVersionId}/inputs/query": {
			"post": {
				"operationId": "GetInputs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptInputRecord-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptVersionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"random": {
										"type": "boolean"
									},
									"limit": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"limit"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/prompt/{promptId}/versions/query": {
			"post": {
				"operationId": "GetPromptVersions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_PromptVersionResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Prompt"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "promptId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/settings/query": {
			"get": {
				"operationId": "GetSettings",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"useAzureForExperiment": {
											"type": "boolean"
										}
									},
									"required": [
										"useAzureForExperiment"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Settings"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/log/request": {
			"post": {
				"operationId": "GetRequests",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Log"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "Log message to log",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Message",
								"description": "Log message to log"
							}
						}
					}
				}
			}
		},
		"/v1/key/generateHash": {
			"post": {
				"operationId": "GenerateHash",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"error": {
											"properties": {
												"details": {
													"type": "string"
												},
												"message": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"success": {
											"type": "boolean"
										}
									},
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Utils"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GenerateHashQueryParams"
							}
						}
					}
				}
			}
		},
		"/v1/dataset/{datasetId}/fine-tune": {
			"post": {
				"operationId": "DatasetFineTune",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FineTuneResult"
								}
							}
						}
					}
				},
				"tags": [
					"FineTune",
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "datasetId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FineTuneBodyParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset": {
			"post": {
				"operationId": "AddDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__datasetId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewDatasetParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/random": {
			"post": {
				"operationId": "AddRandomDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result__datasetId-string_.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RandomDatasetParams"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/query": {
			"post": {
				"operationId": "GetDatasets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_DatasetResult-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"promptId": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/{datasetId}/query": {
			"post": {
				"operationId": "GetDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result___-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/experiment/dataset/{datasetId}/mutate": {
			"post": {
				"operationId": "MutateDataset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result___-Array.string_"
								}
							}
						}
					}
				},
				"tags": [
					"Dataset"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"removeRequests": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"addRequests": {
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": [
									"removeRequests",
									"addRequests"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/fine-tune": {
			"post": {
				"operationId": "FineTune",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_NewFineTuneJob.string_"
								}
							}
						}
					}
				},
				"tags": [
					"FineTune"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FineTuneBody"
							}
						}
					}
				}
			}
		},
		"/v1/fine-tune/{jobId}/stats": {
			"get": {
				"operationId": "FineTuneJobStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result_FineTuneJobStats.string_"
								}
							}
						}
					}
				},
				"tags": [
					"FineTune"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/admin/orgs/top": {
			"post": {
				"operationId": "GetTopOrgs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"ct": {
												"type": "number",
												"format": "double"
											},
											"organization_id": {
												"type": "string"
											},
											"members": {
												"items": {
													"properties": {
														"last_active": {
															"type": "string"
														},
														"role": {
															"type": "string"
														},
														"email": {
															"type": "string"
														},
														"id": {
															"type": "string"
														}
													},
													"required": [
														"last_active",
														"role",
														"email",
														"id"
													],
													"type": "object"
												},
												"type": "array"
											},
											"name": {
												"type": "string"
											},
											"owner_last_login": {
												"type": "string"
											},
											"owner_email": {
												"type": "string"
											},
											"tier": {
												"type": "string"
											},
											"id": {
												"type": "string"
											},
											"overTime": {
												"items": {
													"properties": {
														"organization_id": {
															"type": "string"
														},
														"dt": {
															"type": "string"
														},
														"count": {
															"type": "number",
															"format": "double"
														}
													},
													"required": [
														"organization_id",
														"dt",
														"count"
													],
													"type": "object"
												},
												"type": "array"
											}
										},
										"required": [
											"ct",
											"organization_id",
											"members",
											"name",
											"owner_last_login",
											"owner_email",
											"tier",
											"id",
											"overTime"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"emailContains": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"orgsNameContains": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"orgsId": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"tier": {
										"type": "string",
										"enum": [
											"all",
											"pro",
											"free",
											"growth",
											"enterprise"
										]
									},
									"endDate": {
										"type": "string"
									},
									"startDate": {
										"type": "string"
									}
								},
								"required": [
									"tier",
									"endDate",
									"startDate"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/admin/admins/query": {
			"get": {
				"operationId": "GetAdmins",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"user_id": {
												"type": "string",
												"nullable": true
											},
											"user_email": {
												"type": "string",
												"nullable": true
											},
											"id": {
												"type": "number",
												"format": "double"
											},
											"created_at": {
												"type": "string"
											}
										},
										"required": [
											"user_id",
											"user_email",
											"id",
											"created_at"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/v1/admin/settings/{name}": {
			"get": {
				"operationId": "GetSetting",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Setting"
								}
							}
						}
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SettingName"
						}
					}
				]
			}
		},
		"/v1/admin/azure/run-test": {
			"post": {
				"operationId": "AzureTest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"fetchParams": {
											"properties": {
												"body": {
													"type": "string"
												},
												"headers": {
													"properties": {},
													"additionalProperties": {
														"type": "string"
													},
													"type": "object"
												},
												"url": {
													"$ref": "#/components/schemas/url.URL"
												}
											},
											"required": [
												"body",
												"headers",
												"url"
											],
											"type": "object"
										},
										"resultText": {
											"type": "string"
										}
									},
									"required": [
										"fetchParams",
										"resultText"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"requestBody": {}
								},
								"required": [
									"requestBody"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/admin/settings": {
			"post": {
				"operationId": "UpdateSetting",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"settings": {
										"$ref": "#/components/schemas/Setting"
									},
									"name": {
										"$ref": "#/components/schemas/SettingName"
									}
								},
								"required": [
									"settings",
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/admin/orgs/query": {
			"post": {
				"operationId": "FindAllOrgs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"orgs": {
											"items": {
												"properties": {
													"id": {
														"type": "string"
													},
													"name": {
														"type": "string"
													}
												},
												"required": [
													"id",
													"name"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"orgs"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"orgName": {
										"type": "string"
									}
								},
								"required": [
									"orgName"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/admin/admins/org/query": {
			"post": {
				"operationId": "AddAdminsToOrg",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"adminIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"orgId": {
										"type": "string"
									}
								},
								"required": [
									"adminIds",
									"orgId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/admin/alert_banners": {
			"post": {
				"operationId": "CreateAlertBanner",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"message": {
										"type": "string"
									},
									"title": {
										"type": "string"
									}
								},
								"required": [
									"message",
									"title"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"patch": {
				"operationId": "UpdateAlertBanner",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Admin"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"active": {
										"type": "boolean"
									},
									"id": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"active",
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://api.helicone.ai/"
		},
		{
			"url": "http://localhost:8585/"
		}
	]
}